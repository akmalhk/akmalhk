PROGRAM Hashing

    DECLARE STRUCTURE Node
        DECLARE INTEGER data
        DECLARE POINTER Node next
    END STRUCTURE

    DECLARE STRUCTURE HashTable
        DECLARE POINTER TO Node chain[SIZE]
    END STRUCTURE

    DECLARE POINTER Node newNode, temp
    DECLARE HashTable ht
    DECLARE INTEGER num, val

    PROCEDURE init ACCEPTS POINTER TO HashTable
        FOR i = 0 to SIZE - 1
            ht->chain[i] = NULL
        END FOR
    END PROCEDURE

    PROCEDURE insert ACCEPTS POINTER TO HashTable, INTEGER value
        key = value % size
        ALLOCATE newNode
        newNode->data = value
        newNode->next = NULL

        IF ht->chain[key] = NULL 
            ht->chain[key] = newNode
        ELSE
            SET temp = ht->chain[key]
            WHILE temp->next != NULL
                SET temp = temp->next
            END WHILE
            temp->next = newNode
        END IF

        PRINT "Entered value " + value + " added to hash table"
    END PROCEDURE

    PROCEDURE printHashTable ACCEPTS POINTER TO HashTable
        FOR i = 0 TO SIZE - 1
            PRINT "chain[" + i + "]-->"
            SET temp = ht->chain[i]
            WHILE temp != NULL
                PRINT temp->data + " -->"
                SET temp = temp->next
            END WHILE
            PRINT "NULL"
        END FOR
    END PROCEDURE

    PROCEDURE main
        CALL init(&ht)
        PRINT "Enter the number of elements: "
        INPUT num

        FOR i = 0 TO num - 1
            PRINT "Enter element " + (i + 1) + ": "
            INPUT val
            CALL insert(&ht, val)
        END FOR

        PRINT "\n\nThe hash table is:\n\n"
        CALL printHashTable(&ht)
    END PROCEDURE

END PROGRAM